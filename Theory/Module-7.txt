1. What is Redux? 
=> Redux is a predictable state container for JavaScript apps.
It helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test. On top of that, it provides a great developer experience, such as live code editing combined with a time traveling debugger.
You can use Redux together with React, or with any other view library. It is tiny (2kB, including dependencies), but has a large ecosystem of addons available.

2. What is Redux Thunk used for?
=> Redux Thunk middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods dispatch and getState as parameters.

3. What is Pure Component? When to use Pure Component over
Component? 
=> A React component is considered pure if it renders the same output for the same state and props. For this type of class component, React provides the PureComponent base class. Class components that extend the React. PureComponent class are treated as pure components.

4. What is the second argument that can optionally be passed
tosetState and what is its purpose? 
=> The second parameter to setState() is an optional callback function that will be executed once setState is completed and the component is re-rendered. componentDidUpdate should be used instead to apply such logic in most cases.

5. Create a Table and Search data from table using React Js ? 
=> const [search, setSearch] = React. useState('');
const handleSearch = (event) => {
setSearch(event. target. value);
};
...
};